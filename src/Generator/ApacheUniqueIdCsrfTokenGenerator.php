<?php
//StrictType
declare(strict_types = 1);

/*
 * Ness
 * Csrf component
 *
 * Author CurtisBarogla <curtis_barogla@outlook.fr>
 *
 */

namespace Ness\Component\Csrf\Generator;

use Ness\Component\Csrf\CsrfToken;

/**
 * Generate a csrf token the mod_unique_id apache module and apply a SHA256 to it for shadowy purposes
 * This module is obviously required, no error verification are done whatsoever
 * 
 * @author CurtisBarogla <curtis_barogla@outlook.fr>
 *
 */
class ApacheUniqueIdCsrfTokenGenerator implements CsrfTokenGeneratorInterface
{
    
    /**
     * {@inheritDoc}
     * @see \Ness\Component\Csrf\Generator\CsrfTokenGeneratorInterface::generate()
     */
    final public function generate(): CsrfToken
    {
        return new CsrfToken(\hash("sha256", $this->getHeader()));
    }

    /**
     * Get the unique id string generated by apache
     * Should be overriden for more testability. Don't want to make it abstract... should...
     * 
     * @return string
     *   Random string provided by apache
     */
    protected function getHeader(): string
    {
        return $_SERVER["UNIQUE_ID"];
    }
    
}
